@model IEnumerable<Order>
@using Newtonsoft.Json
@using WebTestApp.Models

@{
    ViewData["Title"] = "Order";
    var statuses = ViewBag.OrderStatuses as IEnumerable<OrderStatus>;
    int index = 1;
}

<h1 class="text-2xl font-bold text-center my-6">Order Index</h1>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this order?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="text-right mb-4">
    <a asp-action="Create" class="inline-block bg-blue-500 text-white py-2 px-4 rounded-md shadow hover:bg-blue-600 transition">Create New</a>
</div>

<!-- Filter Form -->
<form method="get" class="mb-6 flex items-center gap-4">
    <label for="Status" class="font-medium">Filter by Status:</label>
    <select name="Status" class="form-select px-4 py-2 border rounded-md">
    <option value="")>
        All
    </option>
    @foreach (var status in statuses)
    {
        <option value="@status" selected="@(ViewContext.HttpContext.Request.Query["Status"] == status.ToString() ? "selected" : null)">
            @status
        </option>
    }
</select>


    <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
        Apply Filter
    </button>
</form>

<div class="overflow-x-auto">
    <table id="orderDataTable" class="min-w-full bg-white border border-gray-200 rounded-lg shadow-sm">
        <thead>
            <tr class="bg-gray-800 text-white text-left">
                <th class="py-3 px-6">#</th>
                <th class="py-3 px-6">Employer</th>
                <th class="py-3 px-6">Product</th>
                <th class="py-3 px-6">Price</th>
                <th class="py-3 px-6">Quantity</th>
                <th class="py-3 px-6">Total</th>
                <th class="py-3 px-6">Status</th>
                <th class="py-3 px-6">Order Date</th>
                <th class="py-3 px-6 text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var total = item.Price * item.Quantity;
                var rangeBadgeClass = total switch
                {
                    <= 100 => "bg-green-500 text-white px-2 py-1 rounded",
                    > 100 and <= 500 => "bg-yellow-500 text-gray-900 px-2 py-1 rounded",
                    _ => "bg-red-500 text-white px-2 py-1 rounded"
                };

                <tr class="border-b border-gray-200 hover:bg-gray-50">
                    <td class="py-3 px-6">@index</td>
                    <td class="py-3 px-6">@Html.DisplayFor(modelItem => item.Employer.UserName)</td>
                    <td class="py-3 px-6">@Html.DisplayFor(modelItem => item.Product.Name)</td>
                    <td class="py-3 px-6">@Html.DisplayFor(modelItem => item.Price) Dh</td>
                    <td class="py-3 px-6">@Html.DisplayFor(modelItem => item.Quantity)</td>
                    <td class="py-3 px-6">@total Dh</td>
                    <td class="py-3 px-6"><span class="@rangeBadgeClass">@item.Status</span></td>
                    <td class="py-3 px-6">@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    <td class="py-3 px-6 text-center">
                        <a asp-action="Edit" asp-route-idPr="@item.ProductId" asp-route-idEmp="@item.EmployerId" class="text-yellow-500 hover:text-yellow-600 mx-1">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a href="javascript:void(0);" class="text-red-500 hover:text-red-600 mx-1"
                           data-bs-toggle="modal"
                           data-bs-target="#deleteModal"
                           data-product-id="@item.ProductId"
                           data-employer-id="@item.EmployerId">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>

                        <form asp-action="Pdf" method="post" class="inline-block">
                            <input type="hidden" name="SerializedItem" value='@Html.Raw(JsonConvert.SerializeObject(item))' />
                            <button type="submit" class="text-gray-500 hover:text-gray-700">
                                <i class="fas fa-file-pdf"></i> PDF
                            </button>
                        </form>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#orderDataTable').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                lengthChange: true,
                pageLength: 5,
                language: {
                    search: "Search Orders:",
                    lengthMenu: "Show _MENU_ entries per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                },
                columnDefs: [
                    { orderable: false, targets: -1 } // Disable ordering on the Actions column
                ]
            });
            
            // Attach event listener for delete modal
            $('#deleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var productId = button.data('product-id');
                var employerId = button.data('employer-id');

                var form = $(this).find('#deleteForm');
                form.attr('action', `/Order/Orders/Delete?idPr=${productId}&idEmp=${employerId}`);
            });
        });
    </script>
}
